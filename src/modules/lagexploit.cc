#include <precompiled.hh>

#include "lagexploit.hh"

#include <sdk/class_id.hh>
#include <sdk/convar.hh>
#include <sdk/netvar.hh>
#include <sdk/player.hh>
#include <sdk/weapon.hh>
#include <utils/profiler.hh>

using namespace sdk;

static Convar<bool> doghook_lagexploit_active = Convar<bool>{"doghook_lagexploit_active", false, nullptr};
static Convar<int>  doghook_lagexploit_ticks  = Convar<int>{"doghook_lagexploit_ticks", 3, 0, INT_MAX, nullptr};
static Convar<bool> doghook_lagexploit_backup = Convar<bool>{"doghook_lagexploit_backup", false, nullptr};
static Convar<int>  doghook_lagexploit_key    = Convar<int>{"doghook_lagexploit_key", 0, 0, KEY_COUNT, nullptr};
static Convar<bool> doghook_lagexploit_shoot  = Convar<bool>{"doghook_lagexploit_shoot", false, nullptr};
static Convar<bool> doghook_lagexploit_doom   = Convar<bool>{"doghook_lagexploit_doom", false, nullptr};

namespace lagexploit {

auto last_wep_id = 0;
auto was_holding = false;

void create_move(UserCmd *cmd) {
    profiler_profile_function();

    auto local = Player::local();

    if (!local->alive())
        return;

    if (!doghook_lagexploit_active)
        return;

    auto numsequnce = 0;

    auto is_holding_wep = (cmd->buttons & IN_ATTACK) || (cmd->buttons & IN_ATTACK2);

    auto local_weapon   = local->active_weapon();
    auto current_wep_id = local_weapon->client_class()->class_id;

    if (doghook_lagexploit_doom) {
        // doesnt really work as intended
        static auto i           = 0;
        auto        server_time = iface::globals->ticks_to_time(local->tick_base());
        static auto next_attack = 0.0f;

        if (!next_attack || i == 0 || current_wep_id != last_wep_id) {
            next_attack = local_weapon->next_primary_attack();
            //i = 0; // when wep changes
        }
        if (server_time - next_attack > 30.0f) next_attack = server_time - 30.0f;

        if (server_time - next_attack > 0.0f && (cmd->buttons & IN_ATTACK) || (cmd->buttons & IN_ATTACK2)) {
            if (i == 0)
                i = (int)server_time - (int)next_attack;

            if (i > 75) i = 75;

            numsequnce = i * 66;

            if (local_weapon->clip1() == 0) {
                // crash on rocket launcher
                cmd->buttons &= ~IN_ATTACK;
                cmd->buttons &= ~IN_ATTACK2;
            }
        }

        if (i != 0) i -= 1;
    } else if (doghook_lagexploit_shoot) {
        // works every fucking time
        auto can_shoot = local_weapon->can_shoot(local->tick_base());

        if (current_wep_id == class_id::CTFSniperRifle) {
            is_holding_wep = cmd->buttons & IN_ATTACK;
            if ((can_shoot && is_holding_wep && !was_holding) || (was_holding && !is_holding_wep))
                numsequnce = 1 * 90;

            was_holding = is_holding_wep;
        } else {
            if ((can_shoot && is_holding_wep && !was_holding && current_wep_id != sdk::class_id::CTFFlareGun) ||
                (was_holding && !is_holding_wep)) {
                numsequnce = 1 * 90;
            } else if (can_shoot && is_holding_wep && !was_holding && current_wep_id == sdk::class_id::CTFFlareGun) {
                numsequnce = 2 * 90;
            }
            was_holding = (cmd->buttons & IN_ATTACK) || (cmd->buttons & IN_ATTACK2);
        }
    }

    last_wep_id = current_wep_id;

    if (iface::input_system->is_button_down((ButtonCode)(int)doghook_lagexploit_key))
        numsequnce = doghook_lagexploit_ticks * (doghook_lagexploit_backup ? 90 : 66);
    iface::engine->net_channel_info()->out_sequence() += numsequnce;
};
}; // namespace lagexploit
